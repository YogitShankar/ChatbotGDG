Title: H. Delicate Anti-monotonous Operations
Statement:
There are always many repetitive tasks in life. Iris always dislikes them, so she refuses to repeat them. However, time cannot be turned back; we only have to move forward.
Formally, Iris has an integer sequence
a1,a2,…,an
, where each number in the sequence is between
1
and
w
, inclusive. It is guaranteed that
w≥2
.
Iris defines an operation as selecting two numbers
ai,ai+1
satisfying
ai=ai+1
, and then changing them to two arbitrary integers within the range
[1,w]
. Iris does not like equality, so she must guarantee that
ai≠ai+1
after the operation. Two identical pairs
ai,ai+1
can be selected multiple times.
Iris wants to know the maximum possible sum of all elements of
a
after several (possible, zero) operations, as well as the minimum number of operations required to achieve this maximum value.
Each test contains multiple test cases. The first line contains an integer
t
(
1≤t≤105
) — the number of test cases. The description of the test cases follows.
The first line of each test case contains two integers
n
and
w
(
1≤n≤2⋅105
,
2≤w≤108
) — the length of the array, and the maximum allowed value of the elements.
The second line of each test case contains
n
integers
a1,a2,…,an
(
1≤ai≤w
) — the elements in the array.
It is guaranteed that the sum of
n
over all test cases does not exceed
106
.
For each test case, output two integers — the maximum possible sum of all elements of
a
and the minimum number of operations required, respectively.
In the first test case, no operation can be performed so the answers are
∑ai=15
and
0
, respectively.
In the second test case, the operations can be performed as follows:
[3,1,2,3,4,
1,1
_
]→[3,1,2,3,
4,4
_
,5]→[3,1,2,
3,3
_
,5,5]→[3,1,
2,2
_
,5,5,5]→[3,
1,1
_
,5,5,5,5]→[
3,3
_
,5,5,5,5,5]→[4,5,5,5,5,5,5]
It can be shown this is optimal, so we should output
∑
a
i
=34
and the number of operations,
6
, respectively.
Input Specification:
Input
Each test contains multiple test cases. The first line contains an integer
t
(
1≤t≤
10
5
) — the number of test cases. The description of the test cases follows.
The first line of each test case contains two integers
n
and
w
(
1≤n≤2⋅
10
5
,
2≤w≤
10
8
) — the length of the array, and the maximum allowed value of the elements.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤w
) — the elements in the array.
It is guaranteed that the sum of
n
over all test cases does not exceed
10
6
.
Output Specification:
Output
For each test case, output two integers — the maximum possible sum of all elements of
a
and the minimum number of operations required, respectively.
Sample Tests:
Example
input
Copy
2
5 8
1 2 3 4 5
7 5
3 1 2 3 4 1 1
output
Copy
15 0
34 6
Constraints: time limit per test2 seconds memory limit per test512 megabytes
