{
    "time_limit": "1 second",
    "memory_limit": "256 megabytes",
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory",
        "*1200"
    ],
    "solution": [
        "Let's write down what happens in the problem and try to speed it up. The first observation: we will perform operations until x\u22601x\u22601, after which the answer can be found using the formula ans=1+k%(y\u22121)ans=1+k%(y\u22121). Indeed, after xx becomes equal to 11, if we continue applying operations to it, it will change as follows:",
        "",
        "The second optimization is to group the operations that only add one, so instead of 11 we will add the next value to xx in one action min(k,\u2308xy\u2309\u22c5y\u2212x)min(k,\u2308xy\u2309\u22c5y\u2212x). After this (if we added at least 11), we should try to divide the number by yy (if it is divisible).",
        "If we use these two optimizations, our solution will work in O(logx)O(log\u2061x) for one set of input data, since in one action xx decreases to \u2308x+1y\u2309\u2308x+1y\u2309, and therefore xx becomes 11 in no more than O(logx)O(log\u2061x) actions."
    ]
}