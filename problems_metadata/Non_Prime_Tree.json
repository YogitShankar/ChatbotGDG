{
    "time_limit": "2 seconds",
    "memory_limit": "256 megabytes",
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "number theory",
        "trees",
        "two pointers",
        "*1900"
    ],
    "solution": "2040D - Non Prime TreeThere are many array construction tactics that can be devised here. We will show two of them.We will perform a depth-first traversal of the graph and write a number11greater than the previous one in the traversal order into each subsequent vertex. If the next vertex is not a leaf, then some number has already been written into its parent, which may violate the condition \"|aui\u2212avi||aui\u2212avi|is prime\". If the difference is even and not equal to22, then the condition is satisfied. Otherwise, the condition may be satisfied, but we will still achieve an even difference not equal to22. If the difference is odd, first add the number11. If the difference becomes22, add another22. It can be shown that if we added this additional22, then we did not add them to the previous two vertices in the traversal order.We will write the values2,4,6,\u20262,4,6,\u2026to the vertices with even depth in breadth-first order. We will write the valuesn\u22c52,n\u22c52\u22122,n\u22c52\u22124,\u2026n\u22c52,n\u22c52\u22122,n\u22c52\u22124,\u2026to the vertices with odd depth in breadth-first order. In such a traversal, the condition \"|aui\u2212avi||aui\u2212avi|is prime\" can be violated only for one pair, and one of the vertices of this pair will be a leaf. We will change the value of this leaf to the value of the parent minus11."
}