{
    "time_limit": "2 seconds",
    "memory_limit": "256 megabytes",
    "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "number theory",
        "*1500"
    ],
    "solution": [
        "There are several solutions to this problem, The easiest way is to just fix either aa, bb or cc. Let's fix aa. Since ab+ac+bc\u2264nab+ac+bc\u2264n, we know at the minimum, ab\u2264nab\u2264n. Divide on both sides to get b\u2264nab\u2264na. When a=1a=1, there are nn choices for bb. When a=2a=2, there are n2n2 choices for bb. So in total, there are n+n2+n3+...+nnn+n2+n3+...+nn total choices for bb. This is just the harmonic series, so over all possible aa, there are about nlognnlog\u2061n choices for bb. Therefore, we can afford to loop through both aa and bb.",
        "Now that we have aa and bb, all that's left is to solve for cc. Let's solve for cc in both equations. In the first equation, we can factor cc out to obtain ab+c(a+b)\u2264nab+c(a+b)\u2264n. So, c\u2264n\u2212aba+bc\u2264n\u2212aba+b. In the second equation, c\u2264x\u2212a\u2212bc\u2264x\u2212a\u2212b. Since we want the cc to satisfy both inequalities, we must choose the stricter one. So, the number of possible cc is min(n\u2212aba+b,x\u2212a\u2212b)min(n\u2212aba+b,x\u2212a\u2212b).",
        "The answer is the sum of number of possible cc over all possible aa and bb."
    ]
}