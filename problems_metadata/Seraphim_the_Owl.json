{
    "time_limit": "2 seconds",
    "memory_limit": "256 megabytes",
    "tags": [
        "dp",
        "greedy",
        "*1300"
    ],
    "solution": [
        "Let's consider a greedy approach. Suppose we are standing at position ii. Find the first jj such that j<ij<i and aj<bjaj<bj. If such jj exists and j>mj>m, then swap with jj. This will be optimal, because in any case we will have to pay the people at positions i\u22121,i\u22122,\u2026,ji\u22121,i\u22122,\u2026,j some amount of coins, and in this way we will pay each person at position kk where i>k>ji>k>j, bkbk coins. According to the greedy condition bk>akbk>ak, so bkbk is the minimum amount of coins we can pay kk-th person. We will also pay the jj-th person ajaj coins. aj<bjaj<bj, hence we will pay the minimum amount of coins to all people.",
        "If such jj does not exist, then it is advantageous for us to choose the final position ff, such that 1\u2264f\u2264m1\u2264f\u2264m, in order to finish the movements and overpay as little as possible. Simply check each ff, recalculating the answer using prefix sums on array bb and choose the smallest one.",
        "Asymptotics: O(n)O(n)."
    ]
}