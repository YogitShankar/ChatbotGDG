Darius the Great is constructing 𝑛 stone columns, each consisting of a base and between 0, 1, or 2 inscription pieces stacked on top.In each move, Darius can choose two columns 𝑢 and 𝑣 such that the difference in the number of inscriptions between these columns is exactly 1, and transfer one inscription from the column with more inscriptions to the other one. It is guaranteed that at least one column contains exactly 1 inscription.  Since beauty is the main pillar of historical buildings, Darius wants the columns to have ascending heights. To avoid excessive workers' efforts, he asks you to plan a sequence of at most 𝑛 moves to arrange the columns in non-decreasing order based on the number of inscriptions. Minimizing the number of moves is not required.

The first line contains an integer 𝑡 — the number of test cases. (1≤𝑡≤3000)The first line of each test case contains an integer 𝑛 — the number of stone columns. (1≤𝑛≤2⋅105)The second line contains 𝑛 integers 𝑎1,𝑎2,…,𝑎𝑛, where 𝑎𝑖∈{0,1,2} represents the initial number of inscriptions in the 𝑖-th column. It is guaranteed that at least one column has exactly 1 inscription.It is guaranteed that the sum of 𝑛 over all test cases does not exceed 2⋅105.

For each test case, output an integer 𝑘 — the number of moves used to sort the columns. (0≤𝑘≤𝑛)Then, output 𝑘 lines, each containing two integers 𝑢𝑖 and 𝑣𝑖 (1≤𝑢𝑖,𝑣𝑖≤𝑛), representing the indices of the columns involved in the 𝑖-th move. During each move, it must hold that |𝑎𝑢𝑖−𝑎𝑣𝑖|=1, and one inscription is transferred from the column with more inscriptions to the other.It can be proven that a valid solution always exists under the given constraints.

Input
3 4 0 2 0 1 3 1 2 0 6 0 1 1 2 2 2

Output
2
2 4
2 3
2
3 1
2 3
0


Note
NoteColumns state in the first test case:   Initial: 0,2,0,1  After the first move: 0,1,0,2  After the second move: 0,0,1,2 Columns state in the second test case:   Initial: 1,2,0  After the first move: 0,2,1  After the second move: 0,1,2 In the third test case, the column heights are already sorted in ascending order.
