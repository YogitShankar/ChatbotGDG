Title: F. Earnest Matrix Complement
Statement:
Time will pass, and we might meet again. Looking back at the past, everybody has lived the life they wanted.
Aquawave has a matrix
A
of size
n×m
, whose elements can only be integers in the range
[1,k]
, inclusive. In the matrix, some cells are already filled with an integer, while the rest are currently not filled, denoted by
−1
.
You are going to fill in all the unfilled places in
A
. After that, let
cu,i
be the number of occurrences of element
u
in the
i
-th row. Aquawave defines the beauty of the matrix as
k
∑
u=1
n−1
∑
i=1
cu,i⋅cu,i+1.
You have to find the maximum possible beauty of
A
after filling in the blanks optimally.
The first line of input contains a single integer
t
(
1≤t≤2⋅104
) — the number of test cases. The description of test cases follows.
The first line of each test case contains three integers
n
,
m
, and
k
(
2≤n≤2⋅105
,
2≤m≤2⋅105
,
n⋅m≤6⋅105
,
1≤k≤n⋅m
) — the number of rows and columns of the matrix
A
, and the range of the integers in the matrix, respectively.
Then
n
lines follow, the
i
-th line containing
m
integers
Ai,1,Ai,2,…,Ai,m
(
1≤Ai,j≤k
or
Ai,j=−1
) — the elements in
A
.
It is guaranteed that the sum of
n⋅m
over all test cases does not exceed
6⋅105
.
For each test case, output a single integer — the maximum possible beauty.
In the first test case, the matrix
A
is already determined. Its beauty is
k
∑
u=1
n−1
∑
i=1
cu,i⋅cu,i+1=c1,1⋅c1,2+c1,2⋅c1,3+c2,1⋅c2,2+c2,2⋅c2,3+c3,1⋅c3,2+c3,2⋅c3,3=1⋅1+1⋅1+2⋅0+0⋅1+0⋅2+2⋅1=4.
In the second test case, one can fill the matrix as follows:
[
2 3 3
2 2 3
],
and get the value
4
. It can be proven this is the maximum possible answer one can get.
In the third test case, one of the possible optimal configurations is:
[
1 1 1
1 2 1
1 1 4
].
In the fourth test case, one of the possible optimal configurations is:
[
1 3 2 3
1 3 2 1
3 1 5 1
].
In the fifth test case, one of the possible optimal configurations is:
[
5 5 2
1 8 5
7 5 6
7 7 4
4 4 4
].
Input Specification:
Input
The first line of input contains a single integer
t
(
1≤t≤2⋅104
) — the number of test cases. The description of test cases follows.
The first line of each test case contains three integers
n
,
m
, and
k
(
2≤n≤2⋅105
,
2≤m≤2⋅105
,
n⋅m≤6⋅105
,
1≤k≤n⋅m
) — the number of rows and columns of the matrix
A
, and the range of the integers in the matrix, respectively.
Then
n
lines follow, the
i
-th line containing
m
integers
Ai,1,Ai,2,…,Ai,m
(
1≤Ai,j≤k
or
Ai,j=−1
) — the elements in
A
.
It is guaranteed that the sum of
n⋅m
over all test cases does not exceed
6⋅105
.
Output Specification:
Output
For each test case, output a single integer — the maximum possible beauty.
Sample Tests:
Example
input
Copy
9
3 3 3
1 2 2
3 1 3
3 2 1
2 3 3
-1 3 3
2 2 -1
3 3 6
-1 -1 1
1 2 -1
-1 -1 4
3 4 5
1 3 2 3
-1 -1 2 -1
3 1 5 1
5 3 8
5 -1 2
1 8 -1
-1 5 6
7 7 -1
4 4 4
6 6 5
-1 -1 5 -1 -1 -1
-1 -1 -1 -1 2 -1
-1 1 3 3 -1 -1
-1 1 -1 -1 -1 4
4 2 -1 -1 -1 4
-1 -1 1 2 -1 -1
6 6 4
-1 -1 -1 -1 1 -1
3 -1 2 2 4 -1
3 1 2 2 -1 -1
3 3 3 3 -1 2
-1 3 3 -1 1 3
3 -1 2 2 3 -1
5 5 3
1 1 3 -1 1
2 2 -1 -1 3
-1 -1 -1 2 -1
3 -1 -1 -1 2
-1 1 2 3 -1
6 2 7
-1 7
-1 6
7 -1
-1 -1
-1 -1
2 2
output
Copy
4
4
10
10
8
102
93
58
13
Constraints: time limit per test5 seconds memory limit per test512 megabytes
