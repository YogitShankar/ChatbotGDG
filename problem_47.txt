Title: F. Joker
Statement:
Consider a deck of
n
cards. The positions in the deck are numbered from
1
to
n
from top to bottom. A joker is located at position
m
.
q
operations are applied sequentially to the deck. During the
i
-th operation, you need to take the card at position
ai
and move it either to the beginning or to the end of the deck. For example, if the deck is
[2,1,3,5,4]
, and
ai=2
, then after the operation the deck will be either
[1,2,3,5,4]
(the card from the second position moved to the beginning) or
[2,3,5,4,1]
(the card from the second position moved to the end).
Your task is to calculate the number of distinct positions where the joker can be after each operation.
The first line contains a single integer
t
(
1≤t≤104
) — the number of test cases.
The first line of each test case contains three integers
n
,
m
, and
q
(
2≤n≤109
;
1≤m≤n
;
1≤q≤2⋅105
).
The second line contains
q
integers
a1,a2,…,aq
(
1≤ai≤n
).
Additional constraint on the input: the sum of
q
over all test cases does not exceed
2⋅105
.
For each test case, print
q
integers — the number of distinct positions where the joker can be after each operation.
Input Specification:
Input
The first line contains a single integer
t
(
1≤t≤104
) — the number of test cases.
The first line of each test case contains three integers
n
,
m
, and
q
(
2≤n≤109
;
1≤m≤n
;
1≤q≤2⋅105
).
The second line contains
q
integers
a1,a2,…,aq
(
1≤ai≤n
).
Additional constraint on the input: the sum of
q
over all test cases does not exceed
2⋅105
.
Output Specification:
Output
For each test case, print
q
integers — the number of distinct positions where the joker can be after each operation.
Sample Tests:
Example
input
Copy
5
6 5 3
1 2 3
2 1 4
2 1 1 2
5 3 1
3
3 2 4
2 1 1 1
18 15 4
13 15 1 16
output
Copy
2 3 5 
2 2 2 2 
2 
2 3 3 3 
2 4 6 8 
Constraints: time limit per test2 seconds memory limit per test256 megabytes
