Problem ID: 2053D
Title: D. Refined Product Optimality
Time Limit: 3 seconds
Memory Limit: 512 megabytes

Problem Statement:
Although Iris occasionally sets a problem where the solution is possibly wrong, she still insists on creating problems with her imagination; after all, everyone has always been on the road with their stubbornness... And like ever before, Iris has set a problem to which she gave a wrong solution, but Chris is always supposed to save it! You are going to play the role of Chris now: Chris soon worked out this problem, but he was so tired that he fell asleep. Besides saying thanks to Chris, now it is your turn to write a program to calculate the answers for given input data. Note: since the input and output are large, you may need to optimize them for this problem. For example, in C++, it is enough to use the following lines at the start of the main() function:

Input Specifications:
Each test contains multiple test cases. The first line of input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of test cases follows. The first line of each test case contains two integers nn and qq (1≤n≤2⋅1051≤n≤2⋅105, 1≤q≤2⋅1051≤q≤2⋅105) — the length of the array and the number of operations. The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤5⋅1081≤ai≤5⋅108) — the array aa. The third line of each test case contains nn integers b1,b2,…,bnb1,b2,…,bn (1≤bi≤5⋅1081≤bi≤5⋅108) — the array bb. Then qq lines follow, each line contains two integers oo and xx (o∈{1,2}o∈{1,2}, 1≤x≤n1≤x≤n), representing an operation. It's guaranteed that the sum of nn and the sum of qq over all test cases does not exceed 4⋅1054⋅105, respectively.

Output Specifications:
For each test case, output q+1q+1 integers in a line, representing the answers that Chris will calculate, modulo 998244353998244353.
