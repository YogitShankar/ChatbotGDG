{
    "url": "https://codeforces.com/problemset/problem/2029/D",
    "title": "D. Cool Graph",
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees",
        "*1900"
    ],
    "content": "D. Cool Graphtime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an undirected graph with \ud835\udc5bn vertices and \ud835\udc5am edges.You can perform the following operation at most 2\u22c5max(\ud835\udc5b,\ud835\udc5a)2\u22c5max(n,m) times:  Choose three distinct vertices \ud835\udc4ea, \ud835\udc4fb, and \ud835\udc50c, then for each of the edges (\ud835\udc4e,\ud835\udc4f)(a,b), (\ud835\udc4f,\ud835\udc50)(b,c), and (\ud835\udc50,\ud835\udc4e)(c,a), do the following:   If the edge does not exist, add it. On the contrary, if it exists, remove it.  A graph is called cool if and only if one of the following holds:  The graph has no edges, or  The graph is a tree. You have to make the graph cool by performing the above operations. Note that you can use at most 2\u22c5max(\ud835\udc5b,\ud835\udc5a)2\u22c5max(n,m) operations.It can be shown that there always exists at least one solution.InputEach test contains multiple test cases. The first line of input contains a single integer \ud835\udc61t (1\u2264\ud835\udc61\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. The description of test cases follows.The first line of each test case contains two integers \ud835\udc5bn and \ud835\udc5am (3\u2264\ud835\udc5b\u22641053\u2264n\u2264105, 0\u2264\ud835\udc5a\u2264min(\ud835\udc5b(\ud835\udc5b\u22121)2,2\u22c5105)0\u2264m\u2264min(n(n\u22121)2,2\u22c5105))\u00a0\u2014 the number of vertices and the number of edges.Then \ud835\udc5am lines follow, the \ud835\udc56i-th line contains two integers \ud835\udc62\ud835\udc56ui and \ud835\udc63\ud835\udc56vi (1\u2264\ud835\udc62\ud835\udc56,\ud835\udc63\ud835\udc56\u2264\ud835\udc5b1\u2264ui,vi\u2264n)\u00a0\u2014 the two nodes that the \ud835\udc56i-th edge connects.It is guaranteed that the sum of \ud835\udc5bn over all test cases does not exceed 105105, and the sum of \ud835\udc5am over all test cases does not exceed 2\u22c51052\u22c5105.It is guaranteed that there are no self-loops or multiple-edges in the given graph.OutputFor each test case, in the first line output an integer \ud835\udc58k (0\u2264\ud835\udc58\u22642\u22c5max(\ud835\udc5b,\ud835\udc5a)0\u2264k\u22642\u22c5max(n,m))\u00a0\u2014 the number of operations.Then output \ud835\udc58k lines, the \ud835\udc56i-th line containing three distinct integers \ud835\udc4ea, \ud835\udc4fb, and \ud835\udc50c (1\u2264\ud835\udc4e,\ud835\udc4f,\ud835\udc50\u2264\ud835\udc5b1\u2264a,b,c\u2264n)\u00a0\u2014 the three integers you choose in the \ud835\udc56i-th operation.If there are multiple solutions, you can output any of them.ExampleInputCopy53 03 11 23 21 22 33 31 22 33 16 61 21 64 53 44 63 6OutputCopy0\n1\n1 2 3\n0\n1\n1 2 3\n3\n1 3 6\n2 4 5\n3 4 6\nNoteIn the first test case, the graph is already cool because there are no edges.In the second test case, after performing the only operation, the graph becomes a tree, so it is cool.In the third test case, the graph is already cool because it is a tree.In the fourth test case, after performing the only operation, the graph has no edges, so it is cool.In the fifth test case: OperationGraph before the operationGraph after the operation112233 Note that after the first operation, the graph has already become cool, and there are two extra operations. As the graph is still cool after the two extra operations, this is a valid answer...."
}