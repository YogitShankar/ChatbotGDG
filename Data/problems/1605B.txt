Problem: B. Reverse Sort
Time Limit: time limit per test2 seconds
Memory Limit: memory limit per test256 megabytes
Tags: greedy, sortings, *1000

Description:
Ashish has a binary string s of length n that he wants to sort in non-decreasing order.
He can perform the following operation: 
Find the minimum number of operations required to sort the string in non-decreasing order. It can be proven that it is always possible to sort the given binary string in at most n operations.
The first line contains a single integer t (1≤t≤1000)  — the number of test cases. The description of the test cases follows.
The first line of each test case contains an integer n (1≤n≤1000)  — the length of the binary string s.
The second line of each test case contains a binary string s of length n containing only 0s and 1s.
It is guaranteed that the sum of n over all test cases does not exceed 1000.
For each test case output the following:
In the first test case, the binary string is already sorted in non-decreasing order.
In the second test case, we can perform the following operation: 
1_ 0 1_ 0_ 0_ → 0_ 0 0_ 1_ 1_ 
In the third test case, we can perform the following operation:
0 0 1_ 0 0_ 0_ → 0 0 0_ 0 0_ 1_